services:
  # NATS Message Broker
  nats:
    image: nats:2.10-alpine
    container_name: speakr-nats
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # HTTP monitoring
      - "6222:6222"  # Cluster connections
    command: [
      "--jetstream",
      "--store_dir=/data",
      "--http_port=8222"
    ]
    volumes:
      - nats_data:/data
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - speakr-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: speakr-minio
    ports:
      - "9010:9000"  # API
      - "9011:9001"  # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - speakr-network

  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: speakr-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: speakr
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/seed/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d speakr"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - speakr-network

  # MinIO bucket initialization
  minio-init:
    image: minio/mc:latest
    container_name: speakr-minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio:9000 minioadmin minioadmin &&
      mc mb minio/speakr-audio --ignore-existing &&
      mc policy set public minio/speakr-audio &&
      echo 'MinIO bucket speakr-audio created and configured successfully'
      "
    networks:
      - speakr-network

  # NATS stream initialization
  nats-init:
    image: natsio/nats-box:latest
    container_name: speakr-nats-init
    depends_on:
      nats:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      nats --server=nats:4222 stream add SPEAKR_COMMANDS --subjects='speakr.command.*' --storage=file --retention=limits --max-age=24h --replicas=1 &&
      nats --server=nats:4222 stream add SPEAKR_EVENTS --subjects='speakr.event.*' --storage=file --retention=limits --max-age=168h --replicas=1 &&
      echo 'NATS streams created successfully'
      "
    networks:
      - speakr-network

volumes:
  nats_data:
    driver: local
  minio_data:
    driver: local
  postgres_data:
    driver: local

networks:
  speakr-network:
    driver: bridge